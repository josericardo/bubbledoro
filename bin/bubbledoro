#!/usr/bin/env python

import sys
import os
sys.path.insert(0, os.path.realpath('.'))

import pkg_resources
from bubbledoro.pomodoro import Pomodoro
from bubbledoro.sleeper import Sleeper
from bubbledoro.bubbledoro import Bubbledoro
from commands import getstatusoutput
import datetime
from collections import defaultdict


class TerminalWriter:
    def __init__(self):
        self.msg_for = defaultdict(str)
        self.msg_for.update({
            'before_work': 'You should be working',
            'before_short_rest': 'You should rest a little',
            'before_long_rest': 'You should rest for a little longer now'
        })

    def wakeup(self, event):
        msg = self.msg_for[event]

        if msg:
            print("%s. " % msg),

        print("You can press [q, i] anytime.")


class MPG321Notifier:
    def wakeup(self, event):
        sounds = {
            'before_work': 'lets_play',
            'before_short_rest': 'available',
            'before_long_rest': 'chewy'
        }

        sound = sounds.get(event, '')


        if sound:
            print("\a")
            path = pkg_resources.resource_filename('bubbledoro', '%s.wav' % sound)
            getstatusoutput('mpg321 %s' % path)
            print datetime.datetime.now()


class PomodoroWatcher:
    def wakeup(self, event):
        print("%s has finished" % event)

pomodoro = Pomodoro(Sleeper(), 25, 5, 20)

pomodoro.add_observer(MPG321Notifier())
pomodoro.add_observer(TerminalWriter())

Bubbledoro(pomodoro).run()
